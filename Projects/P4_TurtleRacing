# Section 1 - Helper functions
import turtle, time, random
def set_background(image_filename):
	screen = turtle.Screen()
try:
        screen.bgpic(f"/workspaces/Computational-Thinking-8/Backgrounds/{image_filename}.png")
        except:
        screen.bgpic(f"/workspaces/Computational-Thinking-8/Backgrounds/{image_filename}.gif")
def create_sprite(image_filename, x=0, y=0):
	image_file = f"/workspaces/Computational-Thinking-8/Images/{image_filename}.gif"
	screen = turtle.Screen()
	screen.register_shape(image_file)
	sprite = turtle.Turtle()
	sprite.shape(image_file)
	sprite.penup()
	sprite.goto(x,y)
	return sprite


# Section 2 - Variables
# Set starting values for all variables (x1, y1, x2, y2, x3, y3, x4, y4)
x1 = 0
y1 = 100
x2 = 0
y2 = 80
x3 = 0
y3 = 60
x4 = 0
y4 = 40

# Section 3 - Setup
# Use your own background and set your four turtles to images of your choice
set_background("castle")  # Assuming a function to set background
t1 = create_sprite("baseball", x1, y1)
t2 = create_sprite("basketball", x2, y2)
t3 = create_sprite("fish", x3, y3)
t4 = create_sprite("flower", x4, y4)

# Section 4 - Racing
# Set how much each variable changes by and increase the number of repeats to at least 30
# Adjust speed values for each sprite for faster/slower movement
speed1 = 5  # speed of player 1
speed2 = 4  # speed of player 2
speed3 = 3  # speed of player 3
speed4 = 2  # speed of player 4

for i in range(30):  # Increased the number of repeats to 30
    x1 += speed1
    x2 += speed2
    x3 += speed3
    x4 += speed4

    t1.goto(x1, y1)
    t2.goto(x2, y2)
    t3.goto(x3, y3)
    t4.goto(x4, y4)

    time.sleep(0.1)  # Small delay to make the movement visible

# Section 5 - Winner
# Determine the winner based on x positions
if x1 >= 500:  # Assuming the finish line is at x=500
    print("Player 1 wins!")
elif x2 >= 500:
    print("Player 2 wins!")
elif x3 >= 500:
    print("Player 3 wins!")
elif x4 >= 500:
    print("Player 4 wins!")



turtle.exitonclick()
